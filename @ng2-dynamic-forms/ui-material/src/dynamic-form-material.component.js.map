{"version":3,"sources":["ui-material/src/dynamic-form-material.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAA2F,eAAe,CAAC,CAAA;AAC3G,sBAAwB,gBAAgB,CAAC,CAAA;AACzC,yBAAgD,mBAAmB,CAAC,CAAA;AACpE,qBAAsC,yBAAyB,CAAC,CAAA;AAChE,qBAA0C,yBAAyB,CAAC,CAAA;AAEvD,gCAAwB,GAAG,UAAU,CAAC;AASnD;IAAkD,gDAA2B;IAmBzE;QACI,iBAAO,CAAC;QAlBH,WAAM,GAAY,IAAI,CAAC;QAKtB,SAAI,GAA6B,IAAI,mBAAY,EAAc,CAAC;QAChE,WAAM,GAAwB,IAAI,mBAAY,EAAS,CAAC;QACxD,UAAK,GAA6B,IAAI,mBAAY,EAAc,CAAC;QAQlE,SAAI,GAAW,gCAAwB,CAAC;IAIjD,CAAC;IAnBD;QAAC,YAAK,EAAE;;gEAAA;IACR;QAAC,YAAK,EAAE;;sEAAA;IACR;QAAC,YAAK,EAAE;;+DAAA;IACR;QAAC,YAAK,EAAE;;wEAAA;IAER;QAAC,aAAM,EAAE;;8DAAA;IACT;QAAC,aAAM,EAAE;;gEAAA;IACT;QAAC,aAAM,EAAE;;+DAAA;IAET;QAAC,mBAAY,CAAC,kBAAW,CAAC;;wEAAA;IAE1B;QAAC,gBAAS,CAAC,qBAAU,CAAC;;oEAAA;IACtB;QAAC,gBAAS,CAAC,kBAAO,CAAC;;iEAAA;IACnB;QAAC,gBAAS,CAAC,uBAAY,CAAC;;sEAAA;IAtB5B;QAAC,gBAAS,CAAC;YAEP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,+BAA+B;YACzC,WAAW,EAAE,wCAAwC;SACxD,CAAC;;oCAAA;IA8BF,mCAAC;AAAD,CA5BA,AA4BC,CA5BiD,kCAA2B,GA4B5E;AA5BY,oCAA4B,+BA4BxC,CAAA","file":"dynamic-form-material.component.js","sourcesContent":["import {Component, Input, Output, EventEmitter, ViewChild, ContentChild, TemplateRef} from \"@angular/core\";\nimport {FormGroup} from \"@angular/forms\";\nimport {MdCheckbox, MdInput, MdRadioGroup} from \"@angular/material\";\nimport {DynamicFormControlModel} from \"@ng2-dynamic-forms/core\";\nimport {DynamicFormControlComponent} from \"@ng2-dynamic-forms/core\";\n\nexport const DYNAMIC_FORM_UI_MATERIAL = \"MATERIAL\";\n\n@Component({\n\n    moduleId: module.id,\n    selector: \"dynamic-form-material-control\",\n    templateUrl: \"./dynamic-form-material.component.html\"\n})\n\nexport class DynamicFormMaterialComponent extends DynamicFormControlComponent {\n\n    @Input() bindId: boolean = true;\n    @Input() controlGroup: FormGroup;\n    @Input() model: DynamicFormControlModel;\n    @Input() nestedTemplate: TemplateRef<any>;\n\n    @Output() blur: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n    @Output() change: EventEmitter<Event> = new EventEmitter<Event>();\n    @Output() focus: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    @ContentChild(TemplateRef) customTemplate;\n\n    @ViewChild(MdCheckbox) mdCheckbox: MdCheckbox;\n    @ViewChild(MdInput) mdInput: MdInput;\n    @ViewChild(MdRadioGroup) mdRadioGroup: MdRadioGroup;\n\n    readonly type: string = DYNAMIC_FORM_UI_MATERIAL;\n\n    constructor() {\n        super();\n    }\n\n    /*\n     get characterCount() {\n     return this.mdInput ? this.mdInput.characterCount : 0;\n     }\n     */\n}"]}