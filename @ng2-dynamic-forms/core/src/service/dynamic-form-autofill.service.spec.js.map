{"version":3,"sources":["core/src/service/dynamic-form-autofill.service.spec.ts"],"names":[],"mappings":";AAAA,wBAA8B,uBAAuB,CAAC,CAAA;AACtD,8CAAyC,iCAAiC,CAAC,CAAA;AAE3E,QAAQ,CAAC,uCAAuC,EAAE;IAE9C,UAAU,CAAC;QAEP,iBAAO,CAAC,sBAAsB,CAAC;YAC3B,SAAS,EAAE,CAAC,0DAA0B,CAAC;SAC1C,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,mDAAmD,EAAE,gBAAM,CAAC,CAAC,0DAA0B,CAAC,EACvF,UAAC,OAAO;QAEJ,IAAI,MAAM,GAAG,kCAAkC,CAAC;QAChD,IAAI,MAAM,GAAG,iCAAiC,CAAC;QAC/C,IAAI,MAAM,GAAG,2BAA2B,CAAC;QACzC,IAAI,MAAM,GAAG,8BAA8B,CAAC;QAC5C,IAAI,MAAM,GAAG,iBAAiB,CAAC;QAC/B,IAAI,MAAM,GAAG,YAAY,CAAC;QAC1B,IAAI,MAAM,GAAG,4BAA4B,CAAC;QAC1C,IAAI,MAAM,GAAG,gCAAgC,CAAC;QAC9C,IAAI,MAAM,GAAG,iBAAiB,CAAC;QAC/B,IAAI,OAAO,GAAG,sBAAsB,CAAC;QACrC,IAAI,OAAO,GAAG,uBAAuB,CAAC;QACtC,IAAI,OAAO,GAAG,2CAA2C,CAAC;QAC1D,IAAI,OAAO,GAAG,2BAA2B,CAAC;QAC1C,IAAI,OAAO,GAAG,iCAAiC,CAAC;QAEhD,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC5C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC","file":"dynamic-form-autofill.service.spec.js","sourcesContent":["import {TestBed, inject} from \"@angular/core/testing\";\nimport {DynamicFormAutoFillService} from \"./dynamic-form-autofill.service\";\n\ndescribe(\"DynamicFillAutoFillService test suite\", () => {\n\n    beforeEach(() => {\n\n        TestBed.configureTestingModule({\n            providers: [DynamicFormAutoFillService]\n        });\n    });\n\n    it(\"tests if autofill validation is working correctly\", inject([DynamicFormAutoFillService],\n        (service) => {\n\n            let value1 = \"section-test shipping mobile tel\";\n            let value2 = \"billing section-test mobile tel\";\n            let value3 = \"section-test shipping tel\";\n            let value4 = \"section-test work given-name\";\n            let value5 = \"billing cc-name\";\n            let value6 = \"home email\";\n            let value7 = \"section-test shipping work\";\n            let value8 = \"section-test work shipping tel\";\n            let value9 = \"billing country\";\n            let value10 = \"billing country name\";\n            let value11 = \"billing shipping name\";\n            let value12 = \"section-test1 section-test2 shipping name\";\n            let value13 = \"section-test1 blabla name\";\n            let value14 = \"section-test1 blabla mobile tel\";\n\n            expect(service.validate(value1)).toBe(true);\n            expect(service.validate(value2)).toBe(false);\n            expect(service.validate(value3)).toBe(false);\n            expect(service.validate(value4)).toBe(false);\n            expect(service.validate(value5)).toBe(true);\n            expect(service.validate(value6)).toBe(true);\n            expect(service.validate(value7)).toBe(false);\n            expect(service.validate(value8)).toBe(false);\n            expect(service.validate(value9)).toBe(true);\n            expect(service.validate(value10)).toBe(false);\n            expect(service.validate(value11)).toBe(false);\n            expect(service.validate(value12)).toBe(false);\n            expect(service.validate(value13)).toBe(false);\n            expect(service.validate(value14)).toBe(false);\n        }));\n});"]}