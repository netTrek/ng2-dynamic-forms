{"version":3,"sources":["core/src/service/dynamic-form.service.ts"],"names":[],"mappings":"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","file":"dynamic-form.service.js","sourcesContent":["import {Injectable} from \"@angular/core\";\nimport {FormBuilder, FormControl, FormGroup, FormArray, Validators} from \"@angular/forms\";\nimport {DynamicFormControlModel} from \"../model/dynamic-form-control.model\";\nimport {DynamicFormValueControlModel} from \"../model/dynamic-form-value-control.model\";\nimport {\n    DynamicFormArrayModel,\n    DynamicFormArrayGroupModel,\n    DYNAMIC_FORM_CONTROL_TYPE_ARRAY\n} from \"../model/form-array/dynamic-form-array.model\";\nimport {DYNAMIC_FORM_CONTROL_TYPE_GROUP, DynamicFormGroupModel} from \"../model/form-group/dynamic-form-group.model\";\nimport {\n    DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP,\n    DynamicCheckboxGroupModel\n} from \"../model/checkbox/dynamic-checkbox-group.model\";\nimport {DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX, DynamicCheckboxModel,} from \"../model/checkbox/dynamic-checkbox.model\";\nimport {DYNAMIC_FORM_CONTROL_TYPE_INPUT, DynamicInputModel} from \"../model/input/dynamic-input.model\";\nimport {DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP, DynamicRadioGroupModel} from \"../model/radio/dynamic-radio-group.model\";\nimport {DYNAMIC_FORM_CONTROL_TYPE_SELECT, DynamicSelectModel} from \"../model/select/dynamic-select.model\";\nimport {DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA, DynamicTextAreaModel} from \"../model/textarea/dynamic-textarea.model\";\nimport {deserializeValidator, deserializeValidators} from \"../utils\";\n\n@Injectable()\nexport class DynamicFormService {\n\n    constructor(private formBuilder: FormBuilder) {\n    }\n\n    createFormArray(model: DynamicFormArrayModel): FormArray {\n\n        let formArray = [];\n\n        model.groups.forEach((arrayGroupModel: DynamicFormArrayGroupModel) => {\n            formArray.push(this.createFormGroup(arrayGroupModel.group));\n        });\n\n        return this.formBuilder.array(formArray, model.validator, model.asyncValidator);\n    }\n\n    createFormGroup(group: Array<DynamicFormControlModel>, groupExtra: {[key: string]: any} | null = null): FormGroup {\n\n        let formGroup = {};\n\n        group.forEach(model => {\n\n            if (model.type === DYNAMIC_FORM_CONTROL_TYPE_ARRAY) {\n\n                let arrayModel = <DynamicFormArrayModel> model;\n\n                formGroup[model.id] = this.createFormArray(arrayModel);\n\n            } else if (model.type === DYNAMIC_FORM_CONTROL_TYPE_GROUP || model.type === DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP) {\n\n                let groupModel = <DynamicFormGroupModel> model,\n                    groupExtra = {validator: groupModel.validator, asyncValidator: groupModel.asyncValidator};\n\n                formGroup[model.id] = this.createFormGroup(groupModel.group, groupExtra);\n\n            } else {\n\n                let controlModel = <DynamicFormValueControlModel<any>> model;\n\n                formGroup[controlModel.id] = new FormControl(\n                    {value: controlModel.value, disabled: controlModel.disabled},\n                    Validators.compose(controlModel.validators),\n                    Validators.composeAsync(controlModel.asyncValidators)\n                );\n            }\n        });\n\n        return this.formBuilder.group(formGroup, groupExtra);\n    }\n\n    createFormArrayGroup(dynamicFormArrayModel: DynamicFormArrayModel): FormGroup {\n\n        return this.createFormGroup(dynamicFormArrayModel.addGroup().group);\n    }\n\n    addFormArrayGroup(formArray: FormArray, dynamicFormArrayModel: DynamicFormArrayModel): void {\n\n        formArray.push(this.createFormArrayGroup(dynamicFormArrayModel));\n    }\n\n    insertFormArrayGroup(index: number, formArray: FormArray, dynamicFormArrayModel: DynamicFormArrayModel): void {\n\n        formArray.insert(index, this.createFormGroup(dynamicFormArrayModel.insertGroup(index).group));\n    }\n\n    removeFormArrayGroup(index: number, formArray: FormArray, dynamicFormArrayModel: DynamicFormArrayModel): void {\n\n        formArray.removeAt(index);\n        dynamicFormArrayModel.removeGroup(index);\n    }\n\n    clearFormArray(formArray: FormArray, dynamicFormArrayModel: DynamicFormArrayModel): void {\n\n        while (formArray.length > 0) {\n            this.removeFormArrayGroup(0, formArray, dynamicFormArrayModel);\n        }\n    }\n\n    findById(id: string, group: Array<DynamicFormControlModel>): DynamicFormControlModel {\n        return group.find(controlModel => controlModel.id === id);\n    }\n\n    fromJSON(json: Array<Object>): Array<DynamicFormControlModel> | never {\n\n        let formModel: Array<DynamicFormControlModel> = [];\n\n        json.forEach(object => {\n\n            [\"asyncValidator\", \"validator\"].forEach(prop => {\n                object[prop] = deserializeValidator(object[prop]);\n            });\n\n            [\"asyncValidators\", \"validators\"].forEach(prop => {\n                if (Array.isArray(object[prop])) {\n                    object[prop] = deserializeValidators(object[prop]);\n                }\n            });\n\n            switch (object[\"type\"]) {\n\n                case DYNAMIC_FORM_CONTROL_TYPE_ARRAY:\n                    object[\"groups\"].forEach(groupObject => groupObject[\"group\"] = this.fromJSON(groupObject[\"group\"]));\n                    object[\"createGroup\"] = () => this.fromJSON(object[\"originGroup\"]);\n                    formModel.push(new DynamicFormArrayModel(object, object[\"cls\"]));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX:\n                    formModel.push(new DynamicCheckboxModel(object, object[\"cls\"]));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_CHECKBOX_GROUP:\n                    object[\"group\"] = this.fromJSON(object[\"group\"]);\n                    formModel.push(new DynamicCheckboxGroupModel(object, object[\"cls\"]));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_GROUP:\n                    object[\"group\"] = this.fromJSON(object[\"group\"]);\n                    formModel.push(new DynamicFormGroupModel(object, object[\"cls\"]));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_INPUT:\n                    formModel.push(new DynamicInputModel(object, object[\"cls\"]));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_RADIO_GROUP:\n                    formModel.push(new DynamicRadioGroupModel(object, object[\"cls\"]));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_SELECT:\n                    formModel.push(new DynamicSelectModel(object, object[\"cls\"]));\n                    break;\n\n                case DYNAMIC_FORM_CONTROL_TYPE_TEXTAREA:\n                    formModel.push(new DynamicTextAreaModel(object, object[\"cls\"]));\n                    break;\n\n                default:\n                    throw new Error(`unknown form control type defined on JSON object`);\n            }\n        });\n\n        return formModel;\n    }\n}"]}