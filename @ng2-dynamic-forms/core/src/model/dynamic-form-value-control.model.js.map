{"version":3,"sources":["core/src/model/dynamic-form-value-control.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,wBAAsB,cAAc,CAAC,CAAA;AACrC,2CAAgF,8BAA8B,CAAC,CAAA;AAC/G,uCAA2B,qCAAqC,CAAC,CAAA;AACjE,sBAAkC,UAAU,CAAC,CAAA;AAa7C;IAA8D,gDAAuB;IAWjF,sCAAY,MAA0C,EAAE,GAAe;QAX3E,iBAsCC;QAzBO,kBAAM,MAAM,EAAE,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,eAAe,GAAG,gBAAQ,CAAC,MAAM,EAAE,iBAAiB,EAAE,EAAE,CAAC,CAAC;QAC/D,IAAI,CAAC,aAAa,GAAG,gBAAQ,CAAC,MAAM,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,IAAI,GAAG,gBAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,gBAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,QAAQ,GAAG,gBAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,gBAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;QACrD,IAAI,CAAC,MAAM,GAAG,gBAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAE9C,IAAI,CAAC,YAAY,GAAG,IAAI,iBAAO,EAAK,CAAC;QACrC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAQ,IAAK,OAAA,KAAI,CAAC,KAAK,GAAG,KAAK,EAAlB,CAAkB,CAAC,CAAC;IAClE,CAAC;IAED,sBAAI,+CAAK;aAIT;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;aAND,UAAU,KAAQ;YACd,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACxB,CAAC;;;OAAA;IAMD,sBAAI,0DAAgB;aAApB;YACI,MAAM,CAAC,iBAAS,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACzC,CAAC;;;OAAA;IAnCD;QAAC,qCAAY,EAAE;;yEAAA;IACf;QAAC,qCAAY,EAAE;;uEAAA;IACf;QAAC,qCAAY,EAAE;;8DAAA;IACf;QAAC,qCAAY,EAAE;;kEAAA;IACf;QAAC,qCAAY,EAAE;;kEAAA;IACf;QAAC,qCAAY,EAAE;;oEAAA;IACf;QAAC,qCAAY,CAAC,OAAO,CAAC;;gEAAA;IA8B1B,mCAAC;AAAD,CAtCA,AAsCC,CAtC6D,oDAAuB,GAsCpF;AAtCqB,oCAA4B,+BAsCjD,CAAA","file":"dynamic-form-value-control.model.js","sourcesContent":["import {ValidatorFn, AsyncValidatorFn} from \"@angular/forms\";\nimport {Subject} from \"rxjs/Subject\";\nimport {DynamicFormControlModel, DynamicFormControlModelConfig, ClsConfig} from \"./dynamic-form-control.model\";\nimport {serializable} from \"../decorator/serializable.decorator\";\nimport {getValue, isDefined} from \"../utils\";\n\nexport interface DynamicFormValueControlModelConfig extends DynamicFormControlModelConfig {\n\n    asyncValidators?: Array<AsyncValidatorFn>;\n    errorMessages?: {[key: string]: string};\n    hint?: string;\n    required?: boolean;\n    tabIndex?: number;\n    validators?: Array<ValidatorFn>;\n    value?: boolean | number | string;\n}\n\nexport abstract class DynamicFormValueControlModel<T> extends DynamicFormControlModel {\n\n    @serializable() asyncValidators: Array<AsyncValidatorFn>;\n    @serializable() errorMessages: {[key: string]: string} | null;\n    @serializable() hint: string | null;\n    @serializable() required: boolean;\n    @serializable() tabIndex: number | null;\n    @serializable() validators: Array<ValidatorFn>;\n    @serializable(\"value\") _value: T | null;\n    valueUpdates: Subject<T>;\n\n    constructor(config: DynamicFormValueControlModelConfig, cls?: ClsConfig) {\n\n        super(config, cls);\n\n        this.asyncValidators = getValue(config, \"asyncValidators\", []);\n        this.errorMessages = getValue(config, \"errorMessages\", null);\n        this.hint = getValue(config, \"hint\", null);\n        this.required = getValue(config, \"required\", false);\n        this.tabIndex = getValue(config, \"tabIndex\", null);\n        this.validators = getValue(config, \"validators\", []);\n        this._value = getValue(config, \"value\", null);\n\n        this.valueUpdates = new Subject<T>();\n        this.valueUpdates.subscribe((value: T) => this.value = value);\n    }\n\n    set value(value: T) {\n        this._value = value;\n    }\n\n    get value(): T {\n        return this._value;\n    }\n\n    get hasErrorMessages(): boolean {\n        return isDefined(this.errorMessages);\n    }\n}"]}