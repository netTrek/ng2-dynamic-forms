{"version":3,"sources":["core/src/model/dynamic-option-control.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,iDAA+E,oCAAoC,CAAC,CAAA;AACpH,uCAA2B,qCAAqC,CAAC,CAAA;AACjE,sBAAkC,UAAU,CAAC,CAAA;AAS7C;IAMI,2BAAY,MAA+B;QAEvC,IAAI,CAAC,QAAQ,GAAG,gBAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;QACpD,IAAI,CAAC,KAAK,GAAG,gBAAQ,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;QAC7C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC9B,CAAC;IAED,sBAAI,mCAAI;aAAR;YACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACtB,CAAC;aAED,UAAS,IAAY;YACjB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACtB,CAAC;;;OAJA;IAMD,kCAAM,GAAN;QACI,MAAM,CAAC,iBAAS,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;IArBD;QAAC,qCAAY,EAAE;;uDAAA;IACf;QAAC,qCAAY,EAAE;;oDAAA;IACf;QAAC,qCAAY,EAAE;;oDAAA;IAoBnB,wBAAC;AAAD,CAxBA,AAwBC,IAAA;AAxBY,yBAAiB,oBAwB7B,CAAA;AAOD;IAA2D,6CAA+B;IAItF,mCAAY,MAAuC,EAAE,GAAe;QAEhE,kBAAM,MAAM,EAAE,GAAG,CAAC,CAAC;QAEnB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAA,YAAY,IAAI,OAAA,IAAI,iBAAiB,CAAC,YAAY,CAAC,EAAnC,CAAmC,CAAC,GAAG,EAAE,CAAC;IACjH,CAAC;IAPD;QAAC,qCAAY,EAAE;;8DAAA;IAQnB,gCAAC;AAAD,CAVA,AAUC,CAV0D,+DAA4B,GAUtF;AAVqB,iCAAyB,4BAU9C,CAAA","file":"dynamic-option-control.model.js","sourcesContent":["import {ClsConfig} from \"./dynamic-form-control.model\";\nimport {DynamicFormValueControlModel, DynamicFormValueControlModelConfig} from \"./dynamic-form-value-control.model\";\nimport {serializable} from \"../decorator/serializable.decorator\";\nimport {getValue, serialize} from \"../utils\";\n\nexport interface DynamicFormOptionConfig {\n\n    disabled?: boolean;\n    label?: string;\n    value: boolean | number | string;\n}\n\nexport class DynamicFormOption {\n\n    @serializable() disabled: boolean;\n    @serializable() label: string | null;\n    @serializable() value: boolean | number | string;\n\n    constructor(config: DynamicFormOptionConfig) {\n\n        this.disabled = getValue(config, \"disabled\", false);\n        this.label = getValue(config, \"label\", null);\n        this.value = config.value;\n    }\n\n    get text() {\n        return this.label;\n    }\n\n    set text(text: string) {\n        this.label = text;\n    }\n\n    toJSON() {\n        return serialize(this);\n    }\n}\n\nexport interface DynamicOptionControlModelConfig extends DynamicFormValueControlModelConfig {\n\n    options?: Array<DynamicFormOptionConfig>;\n}\n\nexport abstract class DynamicOptionControlModel<T> extends DynamicFormValueControlModel<T> {\n\n    @serializable() options: Array<DynamicFormOption>;\n\n    constructor(config: DynamicOptionControlModelConfig, cls?: ClsConfig) {\n\n        super(config, cls);\n\n        this.options = config.options ? config.options.map(optionConfig => new DynamicFormOption(optionConfig)) : [];\n    }\n}"]}