{"version":3,"sources":["core/src/model/switch/dynamic-switch.model.spec.ts"],"names":[],"mappings":";AAAA,qCAGO,wBAAwB,CAAC,CAAA;AAEhC,QAAQ,CAAC,+BAA+B,EAAE;IAEtC,QAAQ,CAAC,0BAA0B,EAAE;QAEjC,IAAI,MAAM,GAAG,EAAC,EAAE,EAAE,SAAS,EAAC,CAAC;QAC7B,IAAI,YAAgC,CAAC;QAErC,UAAU,CAAC;YACP,YAAY,GAAG,IAAI,yCAAkB,CAAC,MAAM,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE;YAElD,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1C,MAAM,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC3C,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE,CAAC;YACtC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACnD,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,uDAAgC,CAAC,CAAC;YACpE,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;QAEH,EAAE,CAAC,4BAA4B,EAAE;YAE7B,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;YAEpD,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;YAC5C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,uDAAgC,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC;IAEP,CAAC,CAAC,CAAC;AAEP,CAAC,CAAC,CAAC","file":"dynamic-switch.model.spec.js","sourcesContent":["import {\n    DYNAMIC_FORM_CONTROL_TYPE_SWITCH,\n    DynamicSwitchModel\n} from \"./dynamic-switch.model\";\n\ndescribe(\"DynamicSwitchModel test suite\", () => {\n\n    describe(\"default model test suite\", () => {\n\n        let config = {id: \"default\"};\n        let defaultModel: DynamicSwitchModel;\n\n        beforeEach(() => {\n            defaultModel = new DynamicSwitchModel(config);\n        });\n        \n        it(\"tests if default model is correctly initialized\", () => {\n\n            expect(defaultModel.disabled).toBe(false);\n            expect(defaultModel.id).toEqual(config.id);\n            expect(defaultModel.label).toBeNull();\n            expect(defaultModel.name).toEqual(defaultModel.id);\n            expect(defaultModel.type).toEqual(DYNAMIC_FORM_CONTROL_TYPE_SWITCH);\n            expect(defaultModel.value).toBe(false);\n        });\n\n        it(\"should serialize correctly\", () => {\n\n            let json = JSON.parse(JSON.stringify(defaultModel));\n\n            expect(json.id).toEqual(defaultModel.id);\n            expect(json.value).toBe(defaultModel.value);\n            expect(json.type).toEqual(DYNAMIC_FORM_CONTROL_TYPE_SWITCH);\n        });\n        \n    });\n\n});"]}