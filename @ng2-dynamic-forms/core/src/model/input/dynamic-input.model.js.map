{"version":3,"sources":["core/src/model/input/dynamic-input.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,4CAAuE,gCAAgC,CAAC,CAAA;AACxG,uCAA2B,wCAAwC,CAAC,CAAA;AACpE,sBAAuB,aAAa,CAAC,CAAA;AAExB,uCAA+B,GAAG,OAAO,CAAC;AAE1C,6CAAqC,GAAG,OAAO,CAAC;AAChD,gDAAwC,GAAG,UAAU,CAAC;AACtD,sDAA8C,GAAG,gBAAgB,CAAC;AAClE,6CAAqC,GAAG,OAAO,CAAC;AAChD,4CAAoC,GAAG,MAAM,CAAC;AAC9C,6CAAqC,GAAG,OAAO,CAAC;AAChD,8CAAsC,GAAG,QAAQ,CAAC;AAClD,gDAAwC,GAAG,UAAU,CAAC;AACtD,6CAAqC,GAAG,OAAO,CAAC;AAChD,8CAAsC,GAAG,QAAQ,CAAC;AAClD,2CAAmC,GAAG,KAAK,CAAC;AAC5C,4CAAoC,GAAG,MAAM,CAAC;AAC9C,4CAAoC,GAAG,MAAM,CAAC;AAC9C,2CAAmC,GAAG,KAAK,CAAC;AAC5C,4CAAoC,GAAG,MAAM,CAAC;AAc3D;IAAuC,qCAA6B;IAgBhE,2BAAY,MAA+B,EAAE,GAAe;QAExD,kBAAM,MAAM,EAAE,GAAG,CAAC,CAAC;QAdvB,UAAK,GAAoB,IAAI,CAAC;QAQtB,WAAM,GAAkB,IAAI,CAAC;QAEZ,SAAI,GAAW,uCAA+B,CAAC;QAMpE,IAAI,CAAC,MAAM,GAAG,gBAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC/C,IAAI,CAAC,SAAS,GAAG,gBAAQ,CAAC,MAAM,EAAE,WAAW,EAAE,4CAAoC,CAAC,CAAC;QACrF,IAAI,CAAC,IAAI,GAAG,gBAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,GAAG,GAAG,gBAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,GAAG,GAAG,gBAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,gBAAQ,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;QACnD,IAAI,CAAC,OAAO,GAAG,gBAAQ,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,IAAI,GAAG,gBAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAE3C,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACZ,IAAI,CAAC,MAAM,GAAM,IAAI,CAAC,EAAE,SAAM,CAAC;QACnC,CAAC;IACL,CAAC;IA9BD;QAAC,qCAAY,EAAE;;qDAAA;IACf;QAAC,qCAAY,EAAE;;wDAAA;IAEf;QAAC,qCAAY,EAAE;;mDAAA;IACf;QAAC,qCAAY,EAAE;;kDAAA;IACf;QAAC,qCAAY,EAAE;;kDAAA;IACf;QAAC,qCAAY,EAAE;;uDAAA;IACf;QAAC,qCAAY,EAAE;;sDAAA;IACf;QAAC,qCAAY,EAAE;;mDAAA;IAIf;QAAC,qCAAY,EAAE;;mDAAA;IAmBnB,wBAAC;AAAD,CAjCA,AAiCC,CAjCsC,sDAAwB,GAiC9D;AAjCY,yBAAiB,oBAiC7B,CAAA","file":"dynamic-input.model.js","sourcesContent":["import {ClsConfig} from \"../dynamic-form-control.model\";\nimport {DynamicInputControlModel, DynamicInputControlModelConfig} from \"../dynamic-input-control.model\";\nimport {serializable} from \"../../decorator/serializable.decorator\";\nimport {getValue} from \"../../utils\";\n\nexport const DYNAMIC_FORM_CONTROL_TYPE_INPUT = \"INPUT\";\n\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_COLOR = \"color\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME = \"datetime\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_DATETIME_LOCAL = \"datetime-local\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_EMAIL = \"email\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_FILE = \"file\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_MONTH = \"month\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_NUMBER = \"number\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_PASSWORD = \"password\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_RANGE = \"range\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_SEARCH = \"search\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEL = \"tel\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT = \"text\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_TIME = \"time\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_URL = \"url\";\nexport const DYNAMIC_FORM_CONTROL_INPUT_TYPE_WEEK = \"week\";\n\nexport interface DynamicInputModelConfig extends DynamicInputControlModelConfig {\n\n    accept?: string;\n    inputType?: string;\n    list?: Array<string>;\n    max?: number;\n    min?: number;\n    multiple?: boolean;\n    pattern?: string;\n    step?: number;\n}\n\nexport class DynamicInputModel extends DynamicInputControlModel<any> {\n\n    @serializable() accept: string | null;\n    @serializable() inputType: string;\n    files: FileList | null = null;\n    @serializable() list: Array<string> | null;\n    @serializable() max: number | null;\n    @serializable() min: number | null;\n    @serializable() multiple: boolean | null;\n    @serializable() pattern: string | null;\n    @serializable() step: number | null;\n\n    private listId: string | null = null;\n\n    @serializable() readonly type: string = DYNAMIC_FORM_CONTROL_TYPE_INPUT;\n\n    constructor(config: DynamicInputModelConfig, cls?: ClsConfig) {\n\n        super(config, cls);\n\n        this.accept = getValue(config, \"accept\", null);\n        this.inputType = getValue(config, \"inputType\", DYNAMIC_FORM_CONTROL_INPUT_TYPE_TEXT);\n        this.list = getValue(config, \"list\", null);\n        this.max = getValue(config, \"max\", null);\n        this.min = getValue(config, \"min\", null);\n        this.multiple = getValue(config, \"multiple\", null);\n        this.pattern = getValue(config, \"pattern\", null);\n        this.step = getValue(config, \"step\", null);\n\n        if (this.list) {\n            this.listId = `${this.id}List`;\n        }\n    }\n}"]}